declare const AnalysisFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"AnalysisFailed">;
declare class AnalysisFailed extends AnalysisFailed_base {
}
declare const ApplicationNotFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"ApplicationNotFound">;
declare class ApplicationNotFound extends ApplicationNotFound_base {
}
declare const BuildFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"BuildFailed">;
declare class BuildFailed extends BuildFailed_base {
}
declare const CannotImplicitlyRemoveRoots_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"CannotImplicitlyRemoveRoots">;
declare class CannotImplicitlyRemoveRoots extends CannotImplicitlyRemoveRoots_base {
}
declare const CodeMalformed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"CodeMalformed">;
declare class CodeMalformed extends CodeMalformed_base {
}
declare const CouldNotAnalyzeSourceFile_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"CouldNotAnalyzeSourceFile">;
declare class CouldNotAnalyzeSourceFile extends CouldNotAnalyzeSourceFile_base {
}
declare const DependencyCheckFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"DependencyCheckFailed">;
declare class DependencyCheckFailed extends DependencyCheckFailed_base {
}
declare const DirectoryAccessFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"DirectoryAccessFailed">;
declare class DirectoryAccessFailed extends DirectoryAccessFailed_base {
}
declare const DirectoryNotFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"DirectoryNotFound">;
declare class DirectoryNotFound extends DirectoryNotFound_base {
}
declare const EdgeAlreadyInGraph_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"EdgeAlreadyInGraph">;
declare class EdgeAlreadyInGraph extends EdgeAlreadyInGraph_base {
}
declare const EdgeNotInGraph_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"EdgeNotInGraph">;
declare class EdgeNotInGraph extends EdgeNotInGraph_base {
}
declare const ExecutableFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"ExecutableFailed">;
declare class ExecutableFailed extends ExecutableFailed_base {
    readonly command: string;
    readonly exitCode: number;
    readonly stdout: string;
    readonly stderr: string;
    constructor(message: string, command: string, exitCode: number, stdout: string, stderr: string);
}
declare const FileParsingFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"FileParsingFailed">;
declare class FileParsingFailed extends FileParsingFailed_base {
}
declare const GitFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"GitFailed">;
declare class GitFailed extends GitFailed_base {
}
declare const GitNotInReleasableState_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"GitNotInReleasableState">;
declare class GitNotInReleasableState extends GitNotInReleasableState_base {
}
declare const GitNotInUpdateableState_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"GitNotInUpdateableState">;
declare class GitNotInUpdateableState extends GitNotInUpdateableState_base {
}
declare const LicenseCheckConfigurationNotFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseCheckConfigurationNotFound">;
declare class LicenseCheckConfigurationNotFound extends LicenseCheckConfigurationNotFound_base {
}
declare const LicenseCheckConfigurationMalformed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseCheckConfigurationMalformed">;
declare class LicenseCheckConfigurationMalformed extends LicenseCheckConfigurationMalformed_base {
}
declare const LicenseCheckFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseCheckFailed">;
declare class LicenseCheckFailed extends LicenseCheckFailed_base {
}
declare const LicenseDeprecated_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseDeprecated">;
declare class LicenseDeprecated extends LicenseDeprecated_base {
}
declare const LicenseIncompatible_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseIncompatible">;
declare class LicenseIncompatible extends LicenseIncompatible_base {
}
declare const LicenseNotFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseNotFound">;
declare class LicenseNotFound extends LicenseNotFound_base {
}
declare const LicenseNotSupported_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LicenseNotSupported">;
declare class LicenseNotSupported extends LicenseNotSupported_base {
}
declare const LocalBranchBehindRemote_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"LocalBranchBehindRemote">;
declare class LocalBranchBehindRemote extends LocalBranchBehindRemote_base {
}
declare const NoCodeFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"NoCodeFound">;
declare class NoCodeFound extends NoCodeFound_base {
}
declare const NodeNotInGraph_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"NodeNotInGraph">;
declare class NodeNotInGraph extends NodeNotInGraph_base {
}
declare const NonStrictDependencyFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"NonStrictDependencyFound">;
declare class NonStrictDependencyFound extends NonStrictDependencyFound_base {
}
declare const NotOnExpectedBranch_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"NotOnExpectedBranch">;
declare class NotOnExpectedBranch extends NotOnExpectedBranch_base {
}
declare const OutdatedDependencies_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"OutdatedDependencies">;
declare class OutdatedDependencies extends OutdatedDependencies_base {
}
declare const OutdatedNodeReference_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"OutdatedNodeReference">;
declare class OutdatedNodeReference extends OutdatedNodeReference_base {
}
declare const PackageJsonMalformed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"PackageJsonMalformed">;
declare class PackageJsonMalformed extends PackageJsonMalformed_base {
}
declare const PackageJsonMissing_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"PackageJsonMissing">;
declare class PackageJsonMissing extends PackageJsonMissing_base {
}
declare const PackageNotFound_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"PackageNotFound">;
declare class PackageNotFound extends PackageNotFound_base {
}
declare const PendingChanges_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"PendingChanges">;
declare class PendingChanges extends PendingChanges_base {
}
declare const RootAlreadyInGraph_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"RootAlreadyInGraph">;
declare class RootAlreadyInGraph extends RootAlreadyInGraph_base {
}
declare const RootNotInGraph_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"RootNotInGraph">;
declare class RootNotInGraph extends RootNotInGraph_base {
}
declare const StepExecutionFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"StepExecutionFailed">;
declare class StepExecutionFailed extends StepExecutionFailed_base {
}
declare const SourceNodeNotInGraph_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"SourceNodeNotInGraph ">;
declare class SourceNodeNotInGraph extends SourceNodeNotInGraph_base {
}
declare const TestSetupFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"TestSetupFailed">;
declare class TestSetupFailed extends TestSetupFailed_base {
}
declare const TestsFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"TestsFailed">;
declare class TestsFailed extends TestsFailed_base {
}
declare const TypeScriptCompilationFailed_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"TypeScriptCompilationFailed">;
declare class TypeScriptCompilationFailed extends TypeScriptCompilationFailed_base {
}
declare const TypeScriptOutputConfigurationMissing_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"TypeScriptOutputConfigurationMissing">;
declare class TypeScriptOutputConfigurationMissing extends TypeScriptOutputConfigurationMissing_base {
}
declare const UnusedDependencies_base: import("defekt/build/lib/CustomErrorConstructor").CustomErrorConstructor<"UnusedDependencies">;
declare class UnusedDependencies extends UnusedDependencies_base {
}
export { AnalysisFailed, ApplicationNotFound, BuildFailed, CannotImplicitlyRemoveRoots, CodeMalformed, CouldNotAnalyzeSourceFile, DependencyCheckFailed, DirectoryAccessFailed, DirectoryNotFound, EdgeAlreadyInGraph, EdgeNotInGraph, ExecutableFailed, FileParsingFailed, GitFailed, GitNotInReleasableState, GitNotInUpdateableState, LicenseCheckConfigurationNotFound, LicenseCheckConfigurationMalformed, LicenseCheckFailed, LicenseDeprecated, LicenseIncompatible, LicenseNotFound, LicenseNotSupported, LocalBranchBehindRemote, NoCodeFound, NodeNotInGraph, NonStrictDependencyFound, NotOnExpectedBranch, OutdatedDependencies, OutdatedNodeReference, PackageJsonMalformed, PackageJsonMissing, PackageNotFound, PendingChanges, RootAlreadyInGraph, RootNotInGraph, StepExecutionFailed, SourceNodeNotInGraph, TestSetupFailed, TestsFailed, TypeScriptCompilationFailed, TypeScriptOutputConfigurationMissing, UnusedDependencies };
