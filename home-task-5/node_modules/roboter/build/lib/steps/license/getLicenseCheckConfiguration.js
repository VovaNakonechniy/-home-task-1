import fs from 'fs';
import { parseLicenseCheckConfiguration } from './parseLicenseCheckConfiguration';
import path from 'path';
import { error, value } from 'defekt';
import * as errors from '../../errors';
const getLicenseCheckConfiguration = async function ({ absoluteDirectory }) {
    const absoluteLicenseCheckConfigurationFile = path.join(absoluteDirectory, 'licenseCheck.json');
    let licenseCheckConfigurationContent;
    try {
        licenseCheckConfigurationContent = await fs.promises.readFile(absoluteLicenseCheckConfigurationFile, 'utf-8');
    }
    catch (ex) {
        return error(new errors.LicenseCheckConfigurationNotFound({ cause: ex }));
    }
    let licenseCheckConfigurationObject;
    try {
        licenseCheckConfigurationObject = JSON.parse(licenseCheckConfigurationContent);
    }
    catch (ex) {
        return error(new errors.LicenseCheckConfigurationMalformed({
            message: ex.message,
            cause: ex
        }));
    }
    const licenseCheckConfigurationResult = parseLicenseCheckConfiguration(licenseCheckConfigurationObject);
    if (licenseCheckConfigurationResult.hasError()) {
        return error(new errors.LicenseCheckConfigurationMalformed({
            cause: licenseCheckConfigurationResult.error
        }));
    }
    return value(licenseCheckConfigurationResult.value);
};
export { getLicenseCheckConfiguration };
