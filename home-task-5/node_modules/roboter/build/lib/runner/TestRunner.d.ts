/// <reference types="node" />
import { Worker } from 'worker_threads';
import { Result } from 'defekt';
import * as errors from '../errors';
declare class TestRunner {
    protected applicationRoot: string;
    protected bail: boolean;
    protected watch: boolean;
    protected worker: Worker | undefined;
    protected previousRunResult?: 'success' | 'fail' | 'bail';
    protected runNumber: number;
    constructor({ applicationRoot, bail, watch }: {
        applicationRoot: string;
        bail: boolean;
        watch: boolean;
    });
    run({ absoluteTestFilesPerType, typeSequence, grep }: {
        absoluteTestFilesPerType: Record<string, string[]>;
        typeSequence: string[];
        grep?: RegExp;
    }): Promise<Result<undefined, errors.TestsFailed>>;
    abort(): Promise<void>;
}
export { TestRunner };
